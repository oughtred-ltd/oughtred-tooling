name: Archive old releases
on:
  push:
    branches:
      - main
    paths:
      - 'app.json'

jobs:
  execute_script:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout current repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch all history for all tags and branches

    - name: Execute embedded script
      run: |
        #!/bin/bash

        # Directory to store past releases
        PAST_RELEASES_DIR="PAST_RELEASES"
        
        # Create the directory if it does not exist
        mkdir -p "$PAST_RELEASES_DIR"
        
        # Save the IFS (Internal Field Separator) and set it to newline only
        OLD_IFS="$IFS"
        IFS=$'\n'

        # Find all .app files in the root directory, sort them by modification time, and skip the newest
        apps_to_move=($(ls -t *.app | tail -n +2))

        # Check if there are any .app files to move
        if [ "${#apps_to_move[@]}" -gt 0 ]; then
            echo "Moving older .app files to $PAST_RELEASES_DIR..."
            for app in "${apps_to_move[@]}"; do
                mv "$app" "$PAST_RELEASES_DIR/"
            done
        else
            echo "No old .app files to move."
        fi
        
        # Restore the IFS
        IFS="$OLD_IFS"

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git commit -m "chore: archive old releases" || echo "No changes to commit"
        git push

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}